{"version":3,"sources":["AppNavbar.js","Home.js","ClientList.js","ClientEdit.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","props","state","isOpen","toggle","bind","this","setState","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","Component","Home","Container","fluid","Button","ClientList","clients","remove","fetch","then","response","json","data","id","method","headers","updatedClients","filter","i","clientList","map","client","style","whiteSpace","name","email","ButtonGroup","size","onClick","className","Table","width","ClientEdit","emptyItem","item","handleChange","handleSubmit","match","params","event","target","value","preventDefault","body","JSON","stringify","history","push","title","Form","onSubmit","FormGroup","Label","for","Input","type","onChange","autoComplete","withRouter","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c02c0d5.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class AppNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isOpen: false};\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\r\n        </Navbar>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <Button color=\"link\"><Link to=\"/clients\">Clients</Link></Button>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ClientList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {clients: []};\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/clients')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({clients: data}));\r\n    }\r\n\r\n    async remove(id) {\r\n        await fetch(`/clients/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedClients = [...this.state.clients].filter(i => i.id !== id);\r\n            this.setState({clients: updatedClients});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {clients} = this.state;\r\n\r\n        const clientList = clients.map(client => {\r\n            return <tr key={client.id}>\r\n                <td style={{whiteSpace: 'nowrap'}}>{client.name}</td>\r\n                <td>{client.email}</td>\r\n                <td>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/clients/\" + client.id}>Edit</Button>\r\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(client.id)}>Delete</Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Button color=\"success\" tag={Link} to=\"/clients/new\">Add Client</Button>\r\n                    </div>\r\n                    <h3>Clients</h3>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"30%\">Name</th>\r\n                            <th width=\"30%\">Email</th>\r\n                            <th width=\"40%\">Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {clientList}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\n\r\nclass ClientEdit extends Component {\r\n\r\n    emptyItem = {\r\n        name: '',\r\n        email: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: this.emptyItem\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match.params.id !== 'new') {\r\n            const client = await (await fetch(`/clients/${this.props.match.params.id}`)).json();\r\n            this.setState({item: client});\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let item = {...this.state.item};\r\n        item[name] = value;\r\n        this.setState({item});\r\n    }\r\n\r\nasync handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    await fetch('/clients' + (item.id ? '/' + item.id : ''), {\r\n        method: (item.id) ? 'PUT' : 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push('/clients');\r\n}\r\n\r\n    render() {\r\n        const {item} = this.state;\r\n        const title = <h2>{item.id ? 'Edit Client' : 'Add Client'}</h2>;\r\n\r\n        return <div>\r\n            <AppNavbar/>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\r\n                               onChange={this.handleChange} autoComplete=\"name\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\r\n                               onChange={this.handleChange} autoComplete=\"email\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/clients\">Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(ClientEdit);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ClientList from './ClientList';\r\nimport ClientEdit from \"./ClientEdit\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n          <Switch>\r\n            <Route path='/' exact={true} component={Home}/>\r\n            <Route path='/clients' exact={true} component={ClientList}/>\r\n            <Route path='/clients/:id' component={ClientEdit}/>\r\n          </Switch>\r\n        </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}